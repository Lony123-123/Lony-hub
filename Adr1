local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local targetNames = {"KILLPART-5", "KILLPART-100"}

local function isInMyTool(obj)
    local tool = obj:FindFirstAncestorWhichIsA("Tool")
    if tool and (tool.Parent == LocalPlayer.Backpack or tool.Parent == LocalPlayer.Character) then
        return true
    end
    return false
end

local function checkAndRemove(obj)
    for _, name in ipairs(targetNames) do
        if obj.Name == name then
            obj:Destroy()
            return
        end
    end
    if obj:IsA("MeshPart") and not isInMyTool(obj) then
        obj:Destroy()
    end
end

local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local hrp = character:WaitForChild("HumanoidRootPart")
local originalPos = hrp.Position

local function tpFlyToMesh(mesh)
    if hrp and hrp.Parent then
        local bv = Instance.new("BodyVelocity")
        bv.Velocity = Vector3.new(0,0,0)
        bv.MaxForce = Vector3.new(0, math.huge, 0)
        bv.Parent = hrp
        hrp.CFrame = CFrame.new(mesh.Position + Vector3.new(0,5,0))
        task.wait(0.5)
        bv:Destroy()
    end
end

task.spawn(function()
    for _, obj in pairs(workspace:GetDescendants()) do
        checkAndRemove(obj)
        if obj:IsA("MeshPart") and not isInMyTool(obj) then
            tpFlyToMesh(obj)
            task.wait(0.1)
        end
    end
    hrp.CFrame = CFrame.new(originalPos)
end)

workspace.DescendantAdded:Connect(checkAndRemove)
game.DescendantAdded:Connect(checkAndRemove)

for _, obj in pairs(game:GetDescendants()) do
    checkAndRemove(obj)
end
